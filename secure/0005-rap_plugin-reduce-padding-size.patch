From be0deb91a8ec9a336b6dc725be8b5727ef30cc53 Mon Sep 17 00:00:00 2001
From: Keerthana K <keerthanak@vmware.com>
Date: Tue, 8 Nov 2022 14:00:52 +0000
Subject: [PATCH 5/5] rap_plugin: reduce padding size

Signed-off-by: Keerthana K <keerthanak@vmware.com>
---
 scripts/gcc-plugins/rap_plugin/rap.h        | 1 +
 scripts/gcc-plugins/rap_plugin/rap_plugin.c | 2 +-
 2 files changed, 2 insertions(+), 1 deletion(-)

diff --git a/scripts/gcc-plugins/rap_plugin/rap.h b/scripts/gcc-plugins/rap_plugin/rap.h
index f6a284da4..cdf2363de 100644
--- a/scripts/gcc-plugins/rap_plugin/rap.h
+++ b/scripts/gcc-plugins/rap_plugin/rap.h
@@ -3,6 +3,7 @@
 
 #include "gcc-common.h"
 
+#define RAP_HASH_PADDING_SIZE	4
 typedef struct {
 	int hash; // will be sign extended to long in reality
 } rap_hash_t;
diff --git a/scripts/gcc-plugins/rap_plugin/rap_plugin.c b/scripts/gcc-plugins/rap_plugin/rap_plugin.c
index c1f9b9ff8..a2d09d16d 100644
--- a/scripts/gcc-plugins/rap_plugin/rap_plugin.c
+++ b/scripts/gcc-plugins/rap_plugin/rap_plugin.c
@@ -148,7 +148,7 @@ static void rap_hash_align(tree decl)
 
 #ifdef TARGET_64BIT
 	{
-		char padding[skip - rap_hash_offset];
+		char padding[RAP_HASH_PADDING_SIZE];
 
 		// this byte sequence helps disassemblers not trip up on the following rap hash
 		memset(padding, 0xcc, sizeof padding - 1);
-- 
2.38.1

