From 057ea2263b545ac2a90e168879cb9cfe4c348657 Mon Sep 17 00:00:00 2001
From: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
Date: Tue, 26 Jul 2022 14:30:27 -0300
Subject: [PATCH 1/3] netfilter: nf_tables: do not allow SET_ID to refer to
 another table

 When doing lookups for sets on the same batch by using its ID, a set from a
 different table can be used.

 Then, when the table is removed, a reference to the set may be kept after
 the set is freed, leading to a potential use-after-free.

 When looking for sets by ID, use the table that was used for the lookup by
 name, and only return sets belonging to that same table.

 This fixes CVE-2022-2586, also reported as ZDI-CAN-17470.

 Reported-by: Team Orca of Sea Security (@seasecresponse)
 Fixes: 958bee14d071 ("netfilter: nf_tables: use new transaction infrastructure to handle sets")
 Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
---
 net/netfilter/nf_tables_api.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/net/netfilter/nf_tables_api.c b/net/netfilter/nf_tables_api.c
index fdd1da9ecea9..5bfede2926c5 100644
--- a/net/netfilter/nf_tables_api.c
+++ b/net/netfilter/nf_tables_api.c
@@ -3634,6 +3634,7 @@ static struct nft_set *nft_set_lookup_byhandle(const struct nft_table *table,
 }

 static struct nft_set *nft_set_lookup_byid(const struct net *net,
+					   const struct nft_table *table,
 					   const struct nlattr *nla, u8 genmask)
 {
 	struct nft_trans *trans;
@@ -3644,6 +3645,7 @@ static struct nft_set *nft_set_lookup_byid(const struct net *net,
 			struct nft_set *set = nft_trans_set(trans);

 			if (id == nft_trans_set_id(trans) &&
+			    set->table == table &&
 			    nft_active_genmask(set, genmask))
 				return set;
 		}
@@ -3664,7 +3666,7 @@ struct nft_set *nft_set_lookup_global(const struct net *net,
 		if (!nla_set_id)
 			return set;

-		set = nft_set_lookup_byid(net, nla_set_id, genmask);
+		set = nft_set_lookup_byid(net, table, nla_set_id, genmask);
 	}
 	return set;
 }
--
2.17.1

