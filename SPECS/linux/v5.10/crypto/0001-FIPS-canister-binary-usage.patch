From a7304be3fbe5364b74ebabe81d6a10997b4c8441 Mon Sep 17 00:00:00 2001
From: Keerthana K <keerthanak@vmware.com>
Date: Wed, 16 Aug 2023 17:40:05 +0530
Subject: [PATCH 1/2] FIPS canister binary usage

Build with fips canister and skip building crypto algorithms.
Invoke fips canister integrity check during kernel startup.

This patch can be used at two stages:
 1. Prerequisite patch for canister creation.
 2. Binary canister usage time.

Signed-off-by: Alexey Makhalov <amakhalov@vmware.com>
---
 arch/x86/crypto/Makefile |  4 ---
 crypto/Makefile          | 88 ++++++++++++++++++++++++++++++++++++++----------
 init/main.c              |  3 ++
 lib/Makefile             |  2 +-
 lib/crypto/Makefile      |  9 -----
 5 files changed, 75 insertions(+), 31 deletions(-)

diff --git a/arch/x86/crypto/Makefile b/arch/x86/crypto/Makefile
index 66f25c2..1d39b6e 100644
--- a/arch/x86/crypto/Makefile
+++ b/arch/x86/crypto/Makefile
@@ -50,10 +50,6 @@ obj-$(CONFIG_CRYPTO_CHACHA20_X86_64) += chacha-x86_64.o
 chacha-x86_64-y := chacha-avx2-x86_64.o chacha-ssse3-x86_64.o chacha_glue.o
 chacha-x86_64-$(CONFIG_AS_AVX512) += chacha-avx512vl-x86_64.o
 
-obj-$(CONFIG_CRYPTO_AES_NI_INTEL) += aesni-intel.o
-aesni-intel-y := aesni-intel_asm.o aesni-intel_glue.o
-aesni-intel-$(CONFIG_64BIT) += aesni-intel_avx-x86_64.o aes_ctrby8_avx-x86_64.o
-
 obj-$(CONFIG_CRYPTO_SHA1_SSSE3) += sha1-ssse3.o
 sha1-ssse3-y := sha1_avx2_x86_64_asm.o sha1_ssse3_asm.o sha1_ssse3_glue.o
 sha1-ssse3-$(CONFIG_AS_SHA1_NI) += sha1_ni_asm.o
diff --git a/crypto/Makefile b/crypto/Makefile
index 644cfa3..3190695 100644
--- a/crypto/Makefile
+++ b/crypto/Makefile
@@ -40,7 +40,6 @@ rsa_generic-y += rsaprivkey.asn1.o
 rsa_generic-y += rsa.o
 rsa_generic-y += rsa_helper.o
 rsa_generic-y += rsa-pkcs1pad.o
-obj-$(CONFIG_CRYPTO_RSA) += rsa_generic.o
 
 $(obj)/sm2signature.asn1.o: $(obj)/sm2signature.asn1.c $(obj)/sm2signature.asn1.h
 $(obj)/sm2.o: $(obj)/sm2signature.asn1.h
@@ -49,7 +48,6 @@ sm2_generic-y += sm2signature.asn1.o
 sm2_generic-y += sm2.o
 
 obj-$(CONFIG_CRYPTO_SM2) += sm2_generic.o
-obj-$(CONFIG_CRYPTO_SELF_TEST) += crypto_self_test.o
 
 crypto_acompress-y := acompress.o
 crypto_acompress-y += scompress.o
@@ -57,12 +55,10 @@ obj-$(CONFIG_CRYPTO_ACOMP2) += crypto_acompress.o
 
 cryptomgr-y := algboss.o testmgr.o
 
-obj-$(CONFIG_CRYPTO_MANAGER2) += cryptomgr.o
 obj-$(CONFIG_CRYPTO_USER) += crypto_user.o
 crypto_user-y := crypto_user_base.o
 crypto_user-$(CONFIG_CRYPTO_STATS) += crypto_user_stat.o
 obj-$(CONFIG_CRYPTO_CMAC) += cmac.o
-obj-$(CONFIG_CRYPTO_HMAC) += hmac.o
 obj-$(CONFIG_CRYPTO_VMAC) += vmac.o
 obj-$(CONFIG_CRYPTO_XCBC) += xcbc.o
 obj-$(CONFIG_CRYPTO_NULL2) += crypto_null.o
@@ -72,9 +68,6 @@ obj-$(CONFIG_CRYPTO_RMD128) += rmd128.o
 obj-$(CONFIG_CRYPTO_RMD160) += rmd160.o
 obj-$(CONFIG_CRYPTO_RMD256) += rmd256.o
 obj-$(CONFIG_CRYPTO_RMD320) += rmd320.o
-obj-$(CONFIG_CRYPTO_SHA1) += sha1_generic.o
-obj-$(CONFIG_CRYPTO_SHA256) += sha256_generic.o
-obj-$(CONFIG_CRYPTO_SHA512) += sha512_generic.o
 obj-$(CONFIG_CRYPTO_SHA3) += sha3_generic.o
 obj-$(CONFIG_CRYPTO_SM3) += sm3_generic.o
 obj-$(CONFIG_CRYPTO_STREEBOG) += streebog_generic.o
@@ -84,14 +77,10 @@ obj-$(CONFIG_CRYPTO_TGR192) += tgr192.o
 obj-$(CONFIG_CRYPTO_BLAKE2B) += blake2b_generic.o
 obj-$(CONFIG_CRYPTO_BLAKE2S) += blake2s_generic.o
 obj-$(CONFIG_CRYPTO_GF128MUL) += gf128mul.o
-obj-$(CONFIG_CRYPTO_ECB) += ecb.o
-obj-$(CONFIG_CRYPTO_CBC) += cbc.o
 obj-$(CONFIG_CRYPTO_CFB) += cfb.o
 obj-$(CONFIG_CRYPTO_PCBC) += pcbc.o
 obj-$(CONFIG_CRYPTO_CTS) += cts.o
 obj-$(CONFIG_CRYPTO_LRW) += lrw.o
-obj-$(CONFIG_CRYPTO_XTS) += xts.o
-obj-$(CONFIG_CRYPTO_CTR) += ctr.o
 obj-$(CONFIG_CRYPTO_KEYWRAP) += keywrap.o
 obj-$(CONFIG_CRYPTO_ADIANTUM) += adiantum.o
 obj-$(CONFIG_CRYPTO_NHPOLY1305) += nhpoly1305.o
@@ -121,7 +110,6 @@ endif
 
 obj-$(CONFIG_CRYPTO_PCRYPT) += pcrypt.o
 obj-$(CONFIG_CRYPTO_CRYPTD) += cryptd.o
-obj-$(CONFIG_CRYPTO_DES) += des_generic.o
 obj-$(CONFIG_CRYPTO_FCRYPT) += fcrypt.o
 obj-$(CONFIG_CRYPTO_BLOWFISH) += blowfish_generic.o
 obj-$(CONFIG_CRYPTO_BLOWFISH_COMMON) += blowfish_common.o
@@ -129,7 +117,6 @@ obj-$(CONFIG_CRYPTO_TWOFISH) += twofish_generic.o
 obj-$(CONFIG_CRYPTO_TWOFISH_COMMON) += twofish_common.o
 obj-$(CONFIG_CRYPTO_SERPENT) += serpent_generic.o
 CFLAGS_serpent_generic.o := $(call cc-option,-fsched-pressure)  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=79149
-obj-$(CONFIG_CRYPTO_AES) += aes_generic.o
 CFLAGS_aes_generic.o := $(call cc-option,-fno-code-hoisting) # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=83356
 obj-$(CONFIG_CRYPTO_SM4) += sm4_generic.o
 obj-$(CONFIG_CRYPTO_AES_TI) += aes_ti.o
@@ -158,8 +145,6 @@ obj-$(CONFIG_CRYPTO_XXHASH) += xxhash_generic.o
 obj-$(CONFIG_CRYPTO_842) += 842.o
 obj-$(CONFIG_CRYPTO_RNG2) += rng.o
 obj-$(CONFIG_CRYPTO_ANSI_CPRNG) += ansi_cprng.o
-obj-$(CONFIG_CRYPTO_DRBG) += drbg.o
-obj-$(CONFIG_CRYPTO_JITTERENTROPY) += jitterentropy_rng.o
 CFLAGS_jitterentropy.o = -O0
 KASAN_SANITIZE_jitterentropy.o = n
 UBSAN_SANITIZE_jitterentropy.o = n
@@ -173,13 +158,11 @@ obj-$(CONFIG_CRYPTO_USER_API_RNG) += algif_rng.o
 obj-$(CONFIG_CRYPTO_USER_API_AEAD) += algif_aead.o
 obj-$(CONFIG_CRYPTO_ZSTD) += zstd.o
 obj-$(CONFIG_CRYPTO_OFB) += ofb.o
-obj-$(CONFIG_CRYPTO_ECC) += ecc.o
 obj-$(CONFIG_CRYPTO_ESSIV) += essiv.o
 obj-$(CONFIG_CRYPTO_CURVE25519) += curve25519-generic.o
 
 ecdh_generic-y += ecdh.o
 ecdh_generic-y += ecdh_helper.o
-obj-$(CONFIG_CRYPTO_ECDH) += ecdh_generic.o
 
 $(obj)/ecrdsa_params.asn1.o: $(obj)/ecrdsa_params.asn1.c $(obj)/ecrdsa_params.asn1.h
 $(obj)/ecrdsa_pub_key.asn1.o: $(obj)/ecrdsa_pub_key.asn1.c $(obj)/ecrdsa_pub_key.asn1.h
@@ -198,3 +181,74 @@ obj-$(CONFIG_ASYMMETRIC_KEY_TYPE) += asymmetric_keys/
 obj-$(CONFIG_CRYPTO_HASH_INFO) += hash_info.o
 crypto_simd-y := simd.o
 obj-$(CONFIG_CRYPTO_SIMD) += crypto_simd.o
+
+obj-$(CONFIG_CRYPTO_FIPS) += fips_canister_wrapper.o fips_canister.o
+
+ifdef CONFIG_CRYPTO_FIPS
+ifneq ($(CONFIG_CRYPTO_FIPS),y)
+  $(error FIPS canister requires CONFIG_CRYPTO_FIPS=y)
+endif
+ifneq ($(subst Y,y,$(CONFIG_CRYPTO_AEAD)),y)
+  $(error FIPS canister requires CONFIG_CRYPTO_AEAD=y)
+endif
+ifneq ($(subst Y,y,$(CONFIG_CRYPTO_RSA)),y)
+  $(error FIPS canister requires CONFIG_CRYPTO_RSA=y)
+endif
+ifneq ($(subst Y,y,$(CONFIG_CRYPTO_MANAGER)),y)
+  $(error FIPS canister requires CONFIG_CRYPTO_MANAGER=y)
+endif
+ifneq ($(subst Y,y,$(CONFIG_CRYPTO_MANAGER2)),y)
+  $(error FIPS canister requires CONFIG_CRYPTO_MANAGER2=y)
+endif
+ifdef CONFIG_CRYPTO_MANAGER_DISABLE_TESTS
+  $(error FIPS canister requires CONFIG_CRYPTO_MANAGER_DISABLE_TESTS to be unset)
+endif
+ifneq ($(subst Y,y,$(CONFIG_CRYPTO_HMAC)),y)
+  $(error FIPS canister requires CONFIG_CRYPTO_HMAC=y)
+endif
+ifneq ($(subst Y,y,$(CONFIG_CRYPTO_SHA256)),y)
+  $(error FIPS canister requires CONFIG_CRYPTO_SHA256=y)
+endif
+ifneq ($(subst Y,y,$(CONFIG_CRYPTO_SHA512)),y)
+  $(error FIPS canister requires CONFIG_CRYPTO_SHA512=y)
+endif
+ifneq ($(subst Y,y,$(CONFIG_CRYPTO_AES)),y)
+  $(error FIPS canister requires CONFIG_CRYPTO_AES=y)
+endif
+ifneq ($(subst Y,y,$(CONFIG_CRYPTO_DES)),y)
+  $(error FIPS canister requires CONFIG_CRYPTO_DES=y)
+endif
+ifneq ($(subst Y,y,$(CONFIG_CRYPTO_ECB)),y)
+  $(error FIPS canister requires CONFIG_CRYPTO_ECB=y)
+endif
+ifneq ($(subst Y,y,$(CONFIG_CRYPTO_CBC)),y)
+  $(error FIPS canister requires CONFIG_CRYPTO_CBC=y)
+endif
+ifneq ($(subst Y,y,$(CONFIG_CRYPTO_XTS)),y)
+  $(error FIPS canister requires CONFIG_CRYPTO_XTS=y)
+endif
+ifneq ($(subst Y,y,$(CONFIG_CRYPTO_CTR)),y)
+  $(error FIPS canister requires CONFIG_CRYPTO_CTR=y)
+endif
+ifneq ($(subst Y,y,$(CONFIG_CRYPTO_DRBG)),y)
+  $(error FIPS canister requires CONFIG_CRYPTO_DRBG=y)
+endif
+ifneq ($(subst Y,y,$(CONFIG_CRYPTO_DRBG_HASH)),y)
+  $(error FIPS canister requires CONFIG_CRYPTO_DRBG_HASH=y)
+endif
+ifneq ($(subst Y,y,$(CONFIG_CRYPTO_DRBG_CTR)),y)
+  $(error FIPS canister requires CONFIG_CRYPTO_DRBG_CTR=y)
+endif
+ifneq ($(subst Y,y,$(CONFIG_CRYPTO_JITTERENTROPY)),y)
+  $(error FIPS canister requires CONFIG_CRYPTO_JITTERENTROPY=y)
+endif
+ifneq ($(subst Y,y,$(CONFIG_CRYPTO_ECC)),y)
+  $(error FIPS canister requires CONFIG_CRYPTO_ECC=y)
+endif
+ifneq ($(subst Y,y,$(CONFIG_CRYPTO_ECDH)),y)
+  $(error FIPS canister requires CONFIG_CRYPTO_ECDH=y)
+endif
+ifneq ($(subst Y,y,$(CONFIG_CRYPTO_AES_NI_INTEL)),y)
+  $(error FIPS canister requires CONFIG_CRYPTO_AES_NI_INTEL=y)
+endif
+endif
diff --git a/init/main.c b/init/main.c
index 298989b..d15139f 100644
--- a/init/main.c
+++ b/init/main.c
@@ -838,6 +838,8 @@ static void __init mm_init(void)
 	mm_cache_init();
 }
 
+extern int fips_integrity_init(void);
+
 void __init __weak arch_call_rest_init(void)
 {
 	rest_init();
@@ -891,6 +893,7 @@ asmlinkage __visible void __init __no_sanitize_address start_kernel(void)
 		parse_args("Setting extra init args", extra_init_args,
 			   NULL, 0, -1, -1, NULL, set_init_arg);
 
+	fips_integrity_init();
 	/*
 	 * These use large bootmem allocations and must precede
 	 * kmem_cache_init()
diff --git a/lib/Makefile b/lib/Makefile
index a803e15..fc6c915 100644
--- a/lib/Makefile
+++ b/lib/Makefile
@@ -32,7 +32,7 @@ KCSAN_SANITIZE_random32.o := n
 
 lib-y := ctype.o string.o vsprintf.o cmdline.o \
 	 rbtree.o radix-tree.o timerqueue.o xarray.o \
-	 idr.o extable.o sha1.o irq_regs.o argv_split.o \
+	 idr.o extable.o irq_regs.o argv_split.o \
 	 flex_proportions.o ratelimit.o show_mem.o \
 	 is_single_threaded.o plist.o decompress.o kobject_uevent.o \
 	 earlycpio.o seq_buf.o siphash.o dec_and_lock.o \
diff --git a/lib/crypto/Makefile b/lib/crypto/Makefile
index 26be2bb..c127a84 100644
--- a/lib/crypto/Makefile
+++ b/lib/crypto/Makefile
@@ -4,9 +4,6 @@
 obj-y						+= chacha.o
 obj-$(CONFIG_CRYPTO_LIB_CHACHA_GENERIC)		+= libchacha.o
 
-obj-$(CONFIG_CRYPTO_LIB_AES)			+= libaes.o
-libaes-y					:= aes.o
-
 obj-$(CONFIG_CRYPTO_LIB_ARC4)			+= libarc4.o
 libarc4-y					:= arc4.o
 
@@ -26,17 +23,11 @@ libcurve25519-generic-y				+= curve25519-generic.o
 obj-$(CONFIG_CRYPTO_LIB_CURVE25519)		+= libcurve25519.o
 libcurve25519-y					+= curve25519.o
 
-obj-$(CONFIG_CRYPTO_LIB_DES)			+= libdes.o
-libdes-y					:= des.o
-
 obj-$(CONFIG_CRYPTO_LIB_POLY1305_GENERIC)	+= libpoly1305.o
 libpoly1305-y					:= poly1305-donna32.o
 libpoly1305-$(CONFIG_ARCH_SUPPORTS_INT128)	:= poly1305-donna64.o
 libpoly1305-y					+= poly1305.o
 
-obj-$(CONFIG_CRYPTO_LIB_SHA256)			+= libsha256.o
-libsha256-y					:= sha256.o
-
 ifneq ($(CONFIG_CRYPTO_MANAGER_DISABLE_TESTS),y)
 libblake2s-y					+= blake2s-selftest.o
 libchacha20poly1305-y				+= chacha20poly1305-selftest.o
-- 
2.7.4

