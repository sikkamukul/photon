From f2a31ce23140fb177742b833d6f62ee3eea01b57 Mon Sep 17 00:00:00 2001
From: Him Kalyan Bordoloi <bordoloih@vmware.com>
Date: Wed, 23 Dec 2020 14:24:26 -0800
Subject: [PATCH] drivers: amazon efa driver compilation fix on 5.10

---
 drivers/amazon/net/efa/config.h    |  6 +++---
 drivers/amazon/net/efa/efa.h       |  4 ++--
 drivers/amazon/net/efa/efa_verbs.c | 19 ++++---------------
 3 files changed, 9 insertions(+), 20 deletions(-)

diff --git a/drivers/amazon/net/efa/config.h b/drivers/amazon/net/efa/config.h
index dd38807da6ee..9052a859c88f 100644
--- a/drivers/amazon/net/efa/config.h
+++ b/drivers/amazon/net/efa/config.h
@@ -101,10 +101,10 @@
 #define HAVE_IB_QUERY_DEVICE_UDATA 1
 
 /* ib_register_device has name param */
-/* #undef HAVE_IB_REGISTER_DEVICE_NAME_PARAM */
+#define HAVE_IB_REGISTER_DEVICE_NAME_PARAM 1
 
 /* ib_register_device has two params */
-#define HAVE_IB_REGISTER_DEVICE_TWO_PARAMS 1
+/* #define HAVE_IB_REGISTER_DEVICE_TWO_PARAMS */
 
 /* ib_umem_find_single_pg_size exists */
 #define HAVE_IB_UMEM_FIND_SINGLE_PG_SIZE 1
@@ -119,7 +119,7 @@
 /* #undef HAVE_IB_UMEM_GET_UDATA */
 
 /* have void destroy cq */
-#define HAVE_IB_VOID_DESTROY_CQ 1
+/* #undef HAVE_IB_VOID_DESTROY_CQ */
 
 /* have kvzalloc */
 #define HAVE_KVZALLOC 1
diff --git a/drivers/amazon/net/efa/efa.h b/drivers/amazon/net/efa/efa.h
index eca444e863e4..c249e0011db6 100644
--- a/drivers/amazon/net/efa/efa.h
+++ b/drivers/amazon/net/efa/efa.h
@@ -176,7 +176,7 @@ int efa_alloc_pd(struct ib_pd *ibpd,
 		 struct ib_udata *udata);
 #endif
 #ifdef HAVE_DEALLOC_PD_UDATA
-void efa_dealloc_pd(struct ib_pd *ibpd, struct ib_udata *udata);
+int efa_dealloc_pd(struct ib_pd *ibpd, struct ib_udata *udata);
 #elif defined(HAVE_PD_CORE_ALLOCATION)
 void efa_dealloc_pd(struct ib_pd *ibpd);
 #else
@@ -280,7 +280,7 @@ struct ib_ah *efa_kzalloc_ah(struct ib_pd *ibpd,
 #endif
 #endif
 #ifdef HAVE_AH_CORE_ALLOCATION
-void efa_destroy_ah(struct ib_ah *ibah, u32 flags);
+int efa_destroy_ah(struct ib_ah *ibah, u32 flags);
 #elif defined(HAVE_CREATE_DESTROY_AH_FLAGS)
 int efa_destroy_ah(struct ib_ah *ibah, u32 flags);
 #else
diff --git a/drivers/amazon/net/efa/efa_verbs.c b/drivers/amazon/net/efa/efa_verbs.c
index 1d6cf54dda8a..016ac1602e09 100644
--- a/drivers/amazon/net/efa/efa_verbs.c
+++ b/drivers/amazon/net/efa/efa_verbs.c
@@ -543,7 +543,7 @@ struct ib_pd *efa_kzalloc_pd(struct ib_device *ibdev,
 #endif
 
 #ifdef HAVE_DEALLOC_PD_UDATA
-void efa_dealloc_pd(struct ib_pd *ibpd, struct ib_udata *udata)
+int efa_dealloc_pd(struct ib_pd *ibpd, struct ib_udata *udata)
 #elif defined(HAVE_PD_CORE_ALLOCATION)
 void efa_dealloc_pd(struct ib_pd *ibpd)
 #else
@@ -557,9 +557,8 @@ int efa_dealloc_pd(struct ib_pd *ibpd)
 	efa_pd_dealloc(dev, pd->pdn);
 #ifndef HAVE_PD_CORE_ALLOCATION
 	kfree(pd);
-
-	return 0;
 #endif
+	return 0;
 }
 
 static int efa_destroy_qp_handle(struct efa_dev *dev, u32 qp_handle)
@@ -2696,7 +2695,7 @@ struct ib_ah *efa_kzalloc_ah(struct ib_pd *ibpd,
 #endif
 
 #ifdef HAVE_AH_CORE_ALLOCATION
-void efa_destroy_ah(struct ib_ah *ibah, u32 flags)
+int efa_destroy_ah(struct ib_ah *ibah, u32 flags)
 #elif defined(HAVE_CREATE_DESTROY_AH_FLAGS)
 int efa_destroy_ah(struct ib_ah *ibah, u32 flags)
 #else
@@ -2705,9 +2704,7 @@ int efa_destroy_ah(struct ib_ah *ibah)
 {
 	struct efa_dev *dev = to_edev(ibah->pd->device);
 	struct efa_ah *ah = to_eah(ibah);
-#ifndef HAVE_AH_CORE_ALLOCATION
 	int err;
-#endif
 
 	ibdev_dbg(&dev->ibdev, "Destroy ah[%d]\n", ah->ah);
 
@@ -2715,17 +2712,10 @@ int efa_destroy_ah(struct ib_ah *ibah)
 	if (!(flags & RDMA_DESTROY_AH_SLEEPABLE)) {
 		ibdev_dbg(&dev->ibdev,
 			  "Destroy address handle is not supported in atomic context\n");
-#ifdef HAVE_AH_CORE_ALLOCATION
-		return;
-#else
 		return -EOPNOTSUPP;
-#endif
 	}
 #endif
 
-#ifdef HAVE_AH_CORE_ALLOCATION
-	efa_ah_destroy(dev, ah);
-#else
 	err = efa_ah_destroy(dev, ah);
 	if (err)
 		return err;
@@ -2734,9 +2724,8 @@ int efa_destroy_ah(struct ib_ah *ibah)
 #endif
 #ifndef HAVE_AH_CORE_ALLOCATION
 	kfree(ah);
-	return 0;
-#endif
 #endif
+	return 0;
 }
 
 #ifdef HAVE_HW_STATS
-- 
2.17.1

