From 41290625a341067649751508452a0f2d386fbe83 Mon Sep 17 00:00:00 2001
From: Ajay Kaher <akaher@vmware.com>
Date: Mon, 31 Jul 2023 13:15:23 +0530
Subject: [PATCH] x86/boot: unconditional preserve CR4.MCE

CR4.MCE should be preserved unconditional.

As per commit 77a512e35db7, CONFIG_INTEL_TDX_GUEST selects CONFIG_X86_MCE only
to preserve CR4.MCE while enabling CR4.PAE. Preserving CR4.MCE should be unconditional
and CONFIG_INTEL_TDX_GUEST should not select CONFIG_X86_MCE.

Signed-off-by: Ajay Kaher <akaher@vmware.com>
Signed-off-by: Alexey Makhalov <amakhalov@vmware.com>
---
 arch/x86/Kconfig                   | 1 -
 arch/x86/boot/compressed/head_64.S | 4 ----
 arch/x86/kernel/head_64.S          | 4 ----
 3 files changed, 9 deletions(-)

diff --git a/arch/x86/Kconfig b/arch/x86/Kconfig
index b3d5706..8de87f4 100644
--- a/arch/x86/Kconfig
+++ b/arch/x86/Kconfig
@@ -886,7 +886,6 @@ config INTEL_TDX_GUEST
 	depends on X86_X2APIC
 	select ARCH_HAS_CC_PLATFORM
 	select X86_MEM_ENCRYPT
-	select X86_MCE
 	help
 	  Support running as a guest under Intel TDX.  Without this support,
 	  the guest kernel can not boot or run under TDX.
diff --git a/arch/x86/boot/compressed/head_64.S b/arch/x86/boot/compressed/head_64.S
index d33f060..d0c4238 100644
--- a/arch/x86/boot/compressed/head_64.S
+++ b/arch/x86/boot/compressed/head_64.S
@@ -655,7 +655,6 @@ SYM_CODE_START(trampoline_32bit_src)
 1:	popl	%edx
 	popl	%ecx
 
-#ifdef CONFIG_X86_MCE
 	/*
 	 * Preserve CR4.MCE if the kernel will enable #MC support.
 	 * Clearing MCE may fault in some environments (that also force #MC
@@ -665,9 +664,6 @@ SYM_CODE_START(trampoline_32bit_src)
 	 */
 	movl	%cr4, %eax
 	andl	$X86_CR4_MCE, %eax
-#else
-	movl	$0, %eax
-#endif
 
 	/* Enable PAE and LA57 (if required) paging modes */
 	orl	$X86_CR4_PAE, %eax
diff --git a/arch/x86/kernel/head_64.S b/arch/x86/kernel/head_64.S
index 998cdb1..98d9868 100644
--- a/arch/x86/kernel/head_64.S
+++ b/arch/x86/kernel/head_64.S
@@ -173,7 +173,6 @@ SYM_INNER_LABEL(secondary_startup_64_no_verify, SYM_L_GLOBAL)
 	addq	$(init_top_pgt - __START_KERNEL_map), %rax
 1:
 
-#ifdef CONFIG_X86_MCE
 	/*
 	 * Preserve CR4.MCE if the kernel will enable #MC support.
 	 * Clearing MCE may fault in some environments (that also force #MC
@@ -183,9 +182,6 @@ SYM_INNER_LABEL(secondary_startup_64_no_verify, SYM_L_GLOBAL)
 	 */
 	movq	%cr4, %rcx
 	andl	$X86_CR4_MCE, %ecx
-#else
-	movl	$0, %ecx
-#endif
 
 	/* Enable PAE mode, PGE and LA57 */
 	orl	$(X86_CR4_PAE | X86_CR4_PGE), %ecx
-- 
2.7.4

