commit 7024f60d655272bd2ca1d3a4c9e0a63319b1eea1
Author: Hyunwook (Wooky) Baek <baekhw@google.com>
Date:   Sat Jan 9 23:11:02 2021 -0800

    x86/sev-es: Handle string port IO to kernel memory properly

    Don't assume dest/source buffers are userspace addresses when manually
    copying data for string I/O or MOVS MMIO, as {get,put}_user() will fail
    if handed a kernel address and ultimately lead to a kernel panic.

    When invoking INSB/OUTSB instructions in kernel space in a
    SEV-ES-enabled VM, the kernel crashes with the following message:

    "SEV-ES: Unsupported exception in #VC instruction emulation - can't continue"

    Handle that case properly.

    [ bp: Massage commit message. ]

    Fixes: f980f9c31a92 ("x86/sev-es: Compile early handler code into kernel image")
    Signed-off-by: Hyunwook (Wooky) Baek <baekhw@google.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: David Rientjes <rientjes@google.com>
    Link: https://lkml.kernel.org/r/20210110071102.2576186-1-baekhw@google.com

diff --git a/arch/x86/kernel/sev-es.c b/arch/x86/kernel/sev-es.c
index 0bd1a0fc587e..ab31c34ba508 100644
--- a/arch/x86/kernel/sev-es.c
+++ b/arch/x86/kernel/sev-es.c
@@ -286,6 +286,12 @@ static enum es_result vc_write_mem(struct es_em_ctxt *ctxt,
 	u16 d2;
 	u8  d1;
 
+	/* If instruction ran in kernel mode and the I/O buffer is in kernel space */
+	if (!user_mode(ctxt->regs) && !access_ok(target, size)) {
+		memcpy(dst, buf, size);
+		return ES_OK;
+	}
+
 	switch (size) {
 	case 1:
 		memcpy(&d1, buf, 1);
@@ -335,6 +341,12 @@ static enum es_result vc_read_mem(struct es_em_ctxt *ctxt,
 	u16 d2;
 	u8  d1;
 
+	/* If instruction ran in kernel mode and the I/O buffer is in kernel space */
+	if (!user_mode(ctxt->regs) && !access_ok(s, size)) {
+		memcpy(buf, src, size);
+		return ES_OK;
+	}
+
 	switch (size) {
 	case 1:
 		if (get_user(d1, s))
